"use strict";const{ipcMain:u,dialog:j,app:m,BrowserWindow:I}=require("electron"),f=require("fs"),T=require("path");require("archiver");const{spawn:v}=require("child_process"),S=require("fluent-ffmpeg"),h=require("better-sqlite3"),E={},O={setDefaultIpcMain(){u.handle("save-data-flv",async(a,{name:o,buffer:e,parentDirName:d})=>{try{const r=T.join(m.getPath("downloads"),"videos",`${d}`),s=T.join(r,`${o}.webm`),t=T.join(r,`${o}.flv`);try{await f.promises.access(r)}catch{await f.promises.mkdir(r,{recursive:!0})}await f.promises.writeFile(s,Buffer.from(e)),console.log("WebM 文件已保存，路径：",s);const p=v("ffmpeg",["-y","-i",s,"-c:v","libx264","-c:a","aac","-ar",44100,"-r","30","-strict","experimental",t]);return p.on("error",i=>{console.error("Error converting video:",i)}),p.stderr.on("data",i=>{console.error(`ffmpeg stderr: ${i}`)}),new Promise((i,n)=>{p.on("close",w=>{w===0?(console.log("FLV格式视频保存成功"),s&&f.promises.unlink(s).catch(y=>{console.error("删除临时WebM文件时出错:",y)}),i()):(console.error("FFmpeg转换出错",w),n(new Error(`FFmpeg转换出错，错误码：${w}`)))})})}catch(r){console.error("Error saving video:",r)}}),u.handle("get-file-list",async a=>{try{const o=T.join(m.getPath("downloads"),"videos");return(await f.promises.readdir(o)).filter(r=>!r.startsWith(".DS_Store"))}catch(o){throw console.error("Error getting file list:",o),o}}),u.handle("get-video-files",async(a,o)=>{try{const e=T.join(m.getPath("downloads"),"videos",o);return await f.promises.readdir(e)}catch(e){throw console.error("Error getting video files:",e),e}}),u.handle("get-video-file-info",async(a,o)=>{try{return new Promise((e,d)=>{S.ffprobe(o,(r,s)=>{r&&(console.error("Error getting media info:",r),d(r));const t=s.format.start_time,p=t+s.format.duration,i=s.format.duration;e({startTime:t,duration:i,endTime:p,...s.format})})})}catch(e){throw console.error("Error getting video file info:",e),e}}),u.handle("open-window",(a,o)=>{const e=new I({title:o.name});e.loadFile(o.path),e.once("ready-to-show",()=>{e.show()}),e.once("show",()=>{})}),u.on("start-recording",(a,o,e)=>{JSON.parse(o).forEach(async(r,s)=>{const t=T.join(m.getPath("downloads"),"videos",`${e}`);try{await f.promises.access(t)}catch{await f.promises.mkdir(t,{recursive:!0})}const p=T.join(t,`${e}_${s}.flv`),i=v("ffmpeg",["-f","avfoundation","-framerate","30","-video_size","640x480","-i",`${s}:0`,"-c:v","libx264","-c:a","aac","-b:a","256k","-ar",44100,"-strict","experimental",p]);E[s]=i,i.on("close",n=>{n===0?console.log(`摄像头 ${r.label} 录制完成`):console.error(`摄像头 ${r.label} 录制出错，错误码：`,n),delete E[s]})})}),u.on("stop-recording",()=>{console.log("Stopping recording for all cameras");for(const a in E)E[a].kill(),delete E[a]}),u.handle("search-splite3",(a,o)=>{let e=JSON.parse(o);return new Promise((d,r)=>{let s=null;const t=new h(T.join(m.getPath("userData"),"mydb.db"));t.exec(`CREATE TABLE IF NOT EXISTS cases (
                    id INTEGER PRIMARY KEY,
                    caseNo TEXT UNIQUE,  -- 设置caseNo字段为唯一键
                    caseViewId TEXT,
                    distributionCaseId TEXT,
                    distributionOrganId TEXT,
                    planTime TEXT,
                    state TEXT,
                    caseOfAction TEXT,
                    caseCompanyList TEXT,
                    caseCourtPlan TEXT,
                    casePeopleList TEXT,
                    caseRequire TEXT,
                    caseTitle TEXT,
                    org TEXT,
                    outTzCase TEXT,
                    syncTime TEXT
                )`),e.caseNo?s=t.prepare(`SELECT * FROM cases WHERE caseNo LIKE '%${e.caseNo}%'`):s=t.prepare("SELECT * FROM cases");const p=s.all();d(p),t.close()})}),u.handle("inset-splite3",(a,o)=>new Promise((e,d)=>{let r=JSON.parse(o);const s=new h(T.join(m.getPath("userData"),"mydb.db"));s.exec(`CREATE TABLE IF NOT EXISTS cases (
                id INTEGER PRIMARY KEY,
                caseNo TEXT UNIQUE,  -- 设置caseNo字段为唯一键
                caseViewId TEXT,
                distributionCaseId TEXT,
                distributionOrganId TEXT,
                planTime TEXT,
                state TEXT,
                caseOfAction TEXT,
                caseCompanyList TEXT,
                caseCourtPlan TEXT,
                casePeopleList TEXT,
                caseRequire TEXT,
                caseTitle TEXT,
                org TEXT,
                outTzCase TEXT,
                syncTime TEXT
            )`);const t=s.prepare("INSERT OR REPLACE INTO cases (caseNo,caseViewId,distributionCaseId,distributionOrganId,planTime,state,caseOfAction,caseCompanyList,caseCourtPlan,casePeopleList,caseRequire,caseTitle,org,outTzCase,syncTime) VALUES (@caseNo,@caseViewId,@distributionCaseId,@distributionOrganId,@planTime,@state,@caseOfAction,@caseCompanyList,@caseCourtPlan,@casePeopleList,@caseRequire,@caseTitle,@org,@outTzCase,@syncTime)");s.transaction(i=>{i.forEach(n=>{n.caseCompanyList=n.caseCompanyList&&n.caseCompanyList.length?JSON.stringify(n.caseCompanyList):null,n.casePeopleList=n.casePeopleList&&n.casePeopleList.length?JSON.stringify(n.casePeopleList):null,n.caseCourtPlan=n.caseCourtPlan?JSON.stringify(n.caseCourtPlan):null,t.run(n)})})(r),s.close(),e(!0)})),u.handle("search-splite3-case-info",(a,o)=>new Promise((e,d)=>{let r=null;const s=new h(T.join(m.getPath("userData"),"mydb.db"));r=s.prepare("SELECT * FROM cases WHERE distributionCaseId = ?");const t=r.all(o);console.log(t),e(t),s.close()}))}},{dialog:X}=require("electron"),b=require("os"),R=require("../package.json").version,N=[{label:"设置",submenu:[{label:"切换到开发者模式",accelerator:"CmdOrCtrl+I",role:"toggledevtools"},{label:"快速重启",accelerator:"F5",role:"reload"},{label:"退出",accelerator:"CmdOrCtrl+F4",role:"close"}]},{label:"编辑",submenu:[{label:"撤销",accelerator:"CmdOrCtrl+Z",role:"undo"},{label:"重做",accelerator:"Shift+CmdOrCtrl+Z",role:"redo"},{label:"剪切",accelerator:"CmdOrCtrl+X",role:"cut"},{label:"复制",accelerator:"CmdOrCtrl+C",role:"copy"},{label:"粘贴",accelerator:"CmdOrCtrl+V",role:"paste"}]},{label:"帮助",submenu:[{label:"关于",click:()=>{$()}}]}];function $(){X.showMessageBox({title:"关于",type:"info",message:"庭审系统录制软件",detail:`版本信息：${R}
引擎版本：${process.versions.v8}
当前系统：${b.type()} ${b.arch()} ${b.release()}`,noLink:!0})}const{app:l,BrowserWindow:q,systemPreferences:C,Menu:P}=require("electron"),g=require("path"),A=require("fs"),D=function(){let a="";process.env.NODE_ENV==="development"?a=process.cwd()+"/extraResources/configSetting.json":a=g.join(process.resourcesPath,"extraResources/configSetting.json");const o=JSON.parse(A.readFileSync(a,"utf-8"));return console.log("configData",o),o},M=D().path;process.env.DIST=g.join(__dirname,"../dist");process.env.PUBLIC=l.isPackaged?process.env.DIST:g.join(process.env.DIST,"../public");let c;const L=process.env.VITE_DEV_SERVER_URL;O.setDefaultIpcMain();function F(){c=new q({width:1480,height:780,icon:g.join(process.env.PUBLIC,"vite.svg"),webPreferences:{plugins:!0,contextIsolation:!1,nodeIntegration:!0,webSecurity:!1,enableRemoteModule:!0,devTools:!0}});const a=P.buildFromTemplate(N);P.setApplicationMenu(a),c.webContents.once("dom-ready",()=>{process.platform==="darwin"&&C.getMediaAccessStatus("microphone")!=="granted"&&(C.askForMediaAccess("microphone"),C.askForMediaAccess("camera"))}),c.webContents.on("did-finish-load",()=>{c==null||c.webContents.send("main-process-message",new Date().toLocaleString())}),process.env.NODE_ENV=="development"&&c.webContents.openDevTools(),L?c.loadURL(L):c.loadFile(g.join(process.env.DIST,"index.html")),require("@electron/remote/main").initialize(),require("@electron/remote/main").enable(c.webContents)}l.on("window-all-closed",()=>{c=null,l.quit()});l.whenReady().then(()=>{process.env.PATH+=M,F()});l.commandLine.appendSwitch("disable-features","OutOfBlinkCors");l.commandLine.appendArgument("no-sandbox");l.commandLine.appendArgument("disable-setuid-sandbox");l.commandLine.appendArgument("disable-web-security");l.commandLine.appendSwitch("--ignore-certificate-errors","true");l.commandLine.appendSwitch("disable-site-isolation-trials");l.commandLine.appendSwitch("enable-quic");
